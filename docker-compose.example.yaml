version: '3.5'

# 网络配置
networks:
  backend:
    driver: ${NETWORKS_DRIVER}

# 建议使用外部的数据库 mysql/redis
services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}-nginx
    ports:
      - '${OPEN_PORT}:80'
    restart: on-failure
    volumes:
      - ./src:/var/www
      - ./docker/nginx/assets.example.conf:/etc/nginx/assets.example.conf
      - ./docker/nginx/sites/default.example.conf:/etc/nginx/conf.d/default.conf
      - ./docker/log/nginx:/var/log/nginx/:rw
    networks:
      - backend
    links:
      - php

  php:
    container_name: ${APP_NAME}-php
    image: authus/phalcon:5.8.0-s4
    working_dir: /var/www
    volumes:
      - ./src:/var/www:delegated
      - ./docker/log/php:/var/log/php/:rw
      - ./docker/php/php.example.ini:/usr/local/etc/php/php.ini
    networks:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      PHP_IDE_CONFIG: "serverName=docker-php"
    env_file:
      - .env

  workerman:
    container_name: ${APP_NAME}-workerman
    image: authus/phalcon:5.8.0-s4clis
    volumes:
      - ./src:/var/www:delegated
      - ./docker/log/php:/var/log/php/:rw
      - ./docker/php/php.example.ini:/usr/local/etc/php/php.ini
      - ./docker/php/supervisord.example.conf:/etc/supervisor/conf.d/supervisord.conf
    networks:
      - backend
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      PHP_IDE_CONFIG: "serverName=docker-php-clis"
    ports:
      - "${WS_PORT}:80"
    env_file:
      - .env
    depends_on:
      - mysql
      - redis

  mysql:
    container_name: ${APP_NAME}-mysql
    image: mysql:8.1.0
    ports:
      - "${MYSQL_PORT}:3306"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - TZ=Asia/Shanghai
      - LANG=C.UTF-8
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ./docker/mysql/my.example.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/sql:/docker-entrypoint-initdb.d
      - ./docker/log/mysql:/var/log/mysql/:rw
    restart: always
    networks:
      - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${APP_NAME}-phpmyadmin
    restart: always
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - backend

  redis:
    container_name: ${APP_NAME}-redis
    image: redis:7.2-alpine
    environment:
      - TZ=${TZ}
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    command: "redis-server --requirepass ${REDIS_PASSWORD}  --appendonly no" # 如果需要日志，可将 no 改为 yes
    privileged: true
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    networks:
      - backend
#
#  memcached:
#    container_name: ${APP_NAME}-memcached
#    image: memcached:1.5-alpine
#    networks:
#      - backend
#    ports:
#      - "${MEMCACHED_PORT}:11211"
